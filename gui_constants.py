import stdlib.stddraw as stddraw

UPDATE_SPEED = 200  # ms

WIDTH, HEIGHT = 1000, 800
PADDING = 25

# LOG_W = 300
# LOG_R = WIDTH - PADDING
# LOG_L = LOG_R - LOG_W
# LOG_T, LOG_B = HEIGHT - PADDING, PADDING
# LOG_H = LOG_T - LOG_B
# MAIN_R = LOG_L - PADDING
MAIN_R = WIDTH
ABILITY_W = 100

# top info bar
INFO_TOP_W = 400
INFO_TOP_H = 50
INFO_TOP_L, INFO_TOP_R = (
    MAIN_R // 2 - INFO_TOP_W // 2,
    MAIN_R // 2 + INFO_TOP_W // 2,
)
INFO_TOP_T = HEIGHT
INFO_TOP_B = INFO_TOP_T - INFO_TOP_H
# bottom info bar
INFO_BOT_H = 150
INFO_BOT_L, INFO_BOT_R = PADDING, MAIN_R - 2 * PADDING - ABILITY_W
INFO_BOT_T, INFO_BOT_B = INFO_BOT_H, 0
INFO_BOT_W = INFO_BOT_R - INFO_BOT_L

ABILITY_L = INFO_BOT_R + PADDING
ABILITY_R = MAIN_R - PADDING
ABILITY_T, ABILITY_B = INFO_BOT_T, INFO_BOT_B
ABILITY_H = INFO_BOT_H

# player 1 deck positions
DECK_1_L, DECK_1_R = PADDING, MAIN_R // 2 - PADDING
DECK_1_T, DECK_1_B = INFO_TOP_B - PADDING, INFO_BOT_T + PADDING
DECK_1_W = DECK_1_R - DECK_1_L
DECK_1_H = DECK_1_T - DECK_1_B
# player 2 deck positions
DECK_2_L, DECK_2_R = MAIN_R // 2 + PADDING, MAIN_R - PADDING
DECK_2_T, DECK_2_B = INFO_TOP_B - PADDING, INFO_BOT_T + PADDING
DECK_2_W = DECK_2_R - DECK_2_L
DECK_2_H = DECK_2_T - DECK_2_B
# cards
CARD_W = DECK_1_W // 2
CARD_H = DECK_1_H // 3

MOUSE_LEFT = True
MOUSE_RIGHT = False

PLAYER_COLORS = {True: stddraw.BOOK_RED, False: stddraw.BOOK_BLUE}
